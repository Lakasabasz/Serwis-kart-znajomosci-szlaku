@using Serwis.Models
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage
@inject PageRefreshService RefreshService

<div class="top-row relative flex flex-wrap items-center content-between py-3">
    <div class="container mx-auto sm:px-2 max-w-full flex">
        <a class="inline-block text-lg whitespace-no-wrap text-white" href="">Karta Znajomości Szlaku</a>
        <button title="Navigation menu" class="pl-1 text-md leading-normal bg-transparent border border-transparent rounded" @onclick="ToggleNavMenu">
            <span class="border border-gray-600 rounded material-icons text-white">menu</span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable">
    <nav class="flex-col">
        <div class="nav-item px-3">
            <NavLink class="inline-block py-2 px-4 no-underline" href="" Match="NavLinkMatch.All">
                <span class="material-icons">home</span> Strona główna
            </NavLink>
        </div>
        @if (_userData?.Token is null)
        {
            <div class="nav-item px-3">
                <NavLink class="inline-block py-2 px-4 no-underline" href="offer">
                    <span class="material-icons">shopping_cart</span> Oferta
                </NavLink>
            </div>
        }
        else
        {
            <div class="nav-item px-3">
                <NavLink class="inline-block py-2 px-4 no-underline" href="panel">
                    <span class="material-icons" aria-hidden="true">person</span> Panel
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="inline-block py-2 px-4 no-underline" href="generator">
                    <span class="material-icons" aria-hidden="true">map</span> Generator
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="inline-block py-2 px-4 no-underline" href="history">
                    <span class="material-icons" aria-hidden="true">book</span> Historia
                </NavLink>
            </div>
        }
        <hr/>
        <div class="nav-item px-3">
            <NavLink class="inline-block py-2 px-4 no-underline" href="counter">
                <span class="material-icons" aria-hidden="true">add</span> Counter
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="inline-block py-2 px-4 no-underline" href="fetchdata">
                <span class="material-icons" aria-hidden="true">list</span> Fetch data
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="inline-block py-2 px-4 no-underline" href="tool-login-state">
                <span class="material-icons">build</span> Narzędzia
            </NavLink>
        </div>
    </nav>
</div>

@code {
    private bool _collapseNavMenu = false;

    private string? NavMenuCssClass => _collapseNavMenu ? "collapse" : "visible";

    private UserData? _userData;

    private void ToggleNavMenu()
    {
        _collapseNavMenu = !_collapseNavMenu;
    }

    protected override async Task OnInitializedAsync()
    {
        if (await LocalStorage.ContainKeyAsync(nameof(UserData)))
            _userData = await LocalStorage.GetItemAsync<UserData>(nameof(UserData));
        await StateHasChanged();
        RefreshService.PageRefreshRequestEvent += async (_, _) => await StateHasChanged();
    }

    private new async Task StateHasChanged()
    {
        if (await LocalStorage.ContainKeyAsync(nameof(UserData)))
            _userData = await LocalStorage.GetItemAsync<UserData>(nameof(UserData));
        else _userData = null;
        base.StateHasChanged();
    }
}